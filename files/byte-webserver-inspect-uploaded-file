#!/usr/bin/perl

=head1 NAME

Part of the modsecurity setup to check uploaded files for malware.

=head1 SYNOPSIS

Will check if the first 2048 bytes of a file contain signatures of php,
decode_base64 or eval and will croak upon detection (log & mail).

=head1 DESCRIPTION

Receives temp filename as argument.

prints "1 OK\n" or "0 MALWARE DETECTED\n";

Modsecurity warns if exit code != 0, but otherwise ignores the exit code.

=head1 AUTHOR

<willem@byte.nl>

=head1 REVIEWER

None 

=head1 SEE ALSO

https://docs.google.com/a/byte.nl/document/d/11XE8ZCgOE5fzsfK33S-5jDDKXwEMNe-2MnhMtghkSuY/edit#

=cut


use strict;
use warnings;

use File::Copy;
use File::Basename;
use Sys::Hostname;
use MIME::Lite;

my $filename          = shift @ARGV || die "Usage: $0 <filename>\n";
my $file_id           = basename($filename);
my $archive_path_data = "/var/spool/modsecurity/$file_id.data";
my $archive_path_log  = "/var/spool/modsecurity/$file_id.log";
my $report_address    = 'gwillem@gmail.com';
my $read_bytes        = 2048;
my $env_string        = join "", map { "$_ => $ENV{$_}\n" } sort keys %ENV;
my $data              = read_first_bytes($filename);

if (string_is_bad($data)) {
    print "0 DETECTED MALWARE\n";
    archive_upload();
#    send_notification($filename);
}
else {
    print "1 BUZZING HAPPILY ALONG (with $filename)\n";
}

exit 0;

## subs

sub send_notification {
    
    my $host = hostname();
	my $msg = MIME::Lite->new(
		From     => 'root@byte.nl',
		To       => $report_address,
		Subject  => "Modsecurity detected malware \@ $host for $ENV{SERVER_NAME}",
        Data     => "Found malware in uploaded file $archive_path_data\n\n$data\n\n$env_string\n",
	);
	$msg->send;    # send via default
}

sub archive_upload {
    
    copy($filename,$archive_path_data)
        or die "couldn't copy: $!";
    
    open LOG, ">$archive_path_log" or die $!;
    print LOG $env_string;
    close LOG or die $!;
    
}

sub read_first_bytes {
    
    my $filename = shift or die "no argument";
    
    open FILE, $filename or die "couldnt open $filename: $!";
    
    local $/ = \$read_bytes; 
    my $data = <FILE>;
    
    close FILE or die $!;
    
    return $data || "";
    
}

sub string_is_bad {
    
    my $str = shift;
    
    my @blacklist = (
        'eval(',
        'base64_decode(',
        'preg_replace(',
        '<?php',
    );
    
    for my $forbidden (@blacklist) {
        if (index($str, $forbidden) != -1) {
            return 1;
        }
    } 
    
    return 0;
    
}

BEGIN { 

    ## If i die, don't take anyone with me
	$SIG{__DIE__} = sub {
        print "1 i died, but please continue for now (@_)\n";
        exit 0;
	};
    
}

